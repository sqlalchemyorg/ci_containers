FROM jenkins_pythons

# NOTE: this is set in the config.yml file, not here
ARG sqlite_versions="0000_0000000"


# install mariadb packages, outside of centos packaging
#RUN \
#	yum module disable -y mariadb && \
#    curl -LsS https://downloads.mariadb.com/MariaDB/mariadb_repo_setup | bash -s --  && \
#    yum install -y MariaDB-devel MariaDB-client  MariaDB-shared


# install SQL Server client stuff
ENV ACCEPT_EULA="Y"

RUN \
	curl -L -O https://packages.microsoft.com/config/rhel/8/prod.repo && \
	mv prod.repo /etc/yum.repos.d/mssql-release.repo && \
	dnf install -y unixODBC unixODBC-devel redhat-rpm-config freetds freetds-devel msodbcsql18 mssql-tools18 msodbcsql17

# overwrite odbc.ini / freetds.conf
COPY odbc.ini /etc/odbc.ini
COPY freetds.conf /etc/freetds.conf


# mariadb
RUN dnf install -y mariadb mariadb-devel

# install postgresql client libs
RUN dnf install -y postgresql postgresql-devel

# install oracle xe to get client libraries
# libnsl: DPI-1047: 64-bit Oracle Client library cannot be loaded: "libnsl.so.1:
# this is part of glibc but may have been moved out to a legacy package as it
# seems to be up to libnsl.so.2 now
RUN \
	dnf install -y libaio-devel libnsl bc redhat-rpm-config && \
	mkdir /usr/local/src/oracle && \
	cd /usr/local/src/oracle && \
	curl -L -O https://jenkins.sqlalchemy.org/downloads/oracle-xe-11.2.0-1.0.x86_64.rpm.zip && \
	unzip oracle-xe-11.2.0-1.0.x86_64.rpm.zip && \
	yum install -y /usr/local/src/oracle/Disk1/oracle-xe-11.2.0-1.0.x86_64.rpm && \
	ln -s /u01/app/oracle/product/11.2.0/xe/bin/oracle_env.sh /etc/profile.d/oracle_env.sh && \
	echo 'export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${ORACLE_HOME}/lib' >> /etc/profile.d/oracle_env.sh && \
	cd .. && rm -fr oracle

# dogpile.cache tests use redis on demand
RUN dnf install -y redis memcached memcached-devel


# the SQLite we build here gets used in cPython via
# LD_LIBRARY_PATH set up in python_envs.sh.   the pythons themselves
# are built against regular sqlite-devel
COPY install_sqlite.sh /usr/local/src/install_sqlite.sh

RUN chmod 0755 /usr/local/src/install_sqlite.sh && \
	/usr/local/src/install_sqlite.sh "${sqlite_versions}"


# the container will mount /etc/hosts from the host

WORKDIR /usr/local/jenkins

RUN curl -L -O https://jenkins.sqlalchemy.org/jnlpJars/agent.jar

VOLUME /usr/local/jenkins /home/jenkins


# add
# "-Dorg.jenkinsci.plugins.gitclient.Git.timeOut=30" for example
# to set git timeouts, which default to 10 minutes
# unfortunately, after setting this to 30 minutes, we still see jobs
# timing out, which means it isn't slow, it's straight up hung.
# so here we **reduce** the time to 5 minutes so that jobs aren't
# held up as long.
#
# for the follower jar that we launch from here, this is the only way
# to get options into it.  then the only way to get the git timeout set
# for all the gerrit actions other than the actual "git checkout" is through
# this variable.   the main slow part is the gerrit fetch refs part, not the checkout.
#
# notes at https://plugins.jenkins.io/git-client/
# switch to jgit?  no idea how to make it work. looks like nobody
# uses it.
#
# OK OK OK HERE IS SOMETHING WE CHANGED
#
# the issue is fetching refs/changes/* is huge.  Let's do what the docs
# say: https://plugins.jenkins.io/gerrit-trigger/
#
# 1.  set Refspec to $GERRIT_REFSPEC under git -> advanced -> refspec
# 2.  set branch to build to $GERRIT_BRANCH
# 3. years ago we tried this and it didnt work.  docs are not that clear:
#    a. go down to "additional behaviors"
#    b. click "add"
#    c. "strategy for choosing what to build"
#    d. "Choosing strategy" -> "Gerrit Trigger"
# 4. WORKS!!! fetches just the ref we need!!!!
#
ENTRYPOINT ["/bin/java", "-Dorg.jenkinsci.plugins.gitclient.Git.timeOut=5", "-jar", "/usr/local/jenkins/agent.jar"]
