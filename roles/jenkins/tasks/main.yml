
- name: setup configured user group
  group: name="jenkins" state=present gid=1002

- name: add configured user
  user: name="jenkins" group="jenkins" uid=1002

- name: make a roomy place for jenkins work
  file:
    path: /home/jenkins
    state: directory
    owner: jenkins

- name: ensure scripts directory present (scripts role makes this also)
  file:
    path: /usr/local/jenkins/scripts
    state: directory
    owner: jenkins
    group: wheel
    mode: "u=rwx,g=rwx"

- name: create podman build location
  file:
    path: "/usr/local/dockerbuilds/jenkins/"
    state: directory

- name: copy docker files
  copy:
    src: "{{ item }}"
    dest: /usr/local/dockerbuilds/jenkins/
  with_items:
    - "Dockerfile.pythons"
    - "Dockerfile.dbdrivers"
    - "install_cpython.sh"
    - "install_sqlite.sh"
    - "freetds.conf"
    - "libmemcached-build.patch"

- name: copy odbc.ini template
  template:
    src: odbc.ini.j2
    dest: /usr/local/dockerbuilds/jenkins/odbc.ini

- name: build pythons image
  containers.podman.podman_image:
    name: "jenkins_pythons"
    state: present
    force: "{{ force_container_rebuild|bool }}"
    path: "/usr/local/dockerbuilds/jenkins/"
    pull: yes
    build:
      extra_args: "-f Dockerfile.pythons --build-arg python_versions='{{ cpython_versions | join(' ') }}'"

- name: build dbdrivers image
  containers.podman.podman_image:
    name: "jenkins"
    state: present
    force: "{{ force_container_rebuild|bool }}"
    build:
      extra_args: "-f Dockerfile.dbdrivers --build-arg sqlite_versions='{{ sqlite_versions | join(' ') }}'"
      rm: no
    path: "/usr/local/dockerbuilds/jenkins/"
    pull: no


# podman run --rm -it --systemd=always --ip=10.88.0.17 --rootfs /busterr /sbin/init
- name: run container
  containers.podman.podman_container:
    image: "jenkins"
    name: "jenkins"
    restart_policy: always
    network: dbcontainers
    cmd_args: ["--ip", "{{ jenkins_runner_ip }}"]
    recreate: "{{ force_container_rebuild|bool }}"
    env: TZ="America/New_York"
    volumes:
      - "/home/jenkins:/home/jenkins:Z"
      - "/usr/local/jenkins/scripts/:/usr/local/jenkins/scripts/:ro"
      - "/etc/hosts:/etc/hosts:ro"
    user: "jenkins"
    # use webSocket for easiest compatibility with cloudflare.   Requires jenkins config for node "enable websockets"
    # and also requires apache proxyPass directive upgrade=websocket
    command: "-url https://jenkins.sqlalchemy.org/ -name {{ jenkins_slave_name }} -webSocket -secret {{ jenkins_secret }}"

