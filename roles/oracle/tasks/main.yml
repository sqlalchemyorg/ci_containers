- name: create docker build location
  file:
    path: /usr/local/dockerbuilds/oracle/
    state: directory

- name: copy Dockerfile etc to docker build location
  copy:
    src: "{{ item }}"
    dest: /usr/local/dockerbuilds/oracle/
  with_items:
    - "Dockerfile.11"
    - "Dockerfile.18c"
    - "functions"
    - "README.txt"
    - "oracle_setup.11.sh"
    - "oracle_responsefile.11.txt"
    - "oracle_entrypoint.11.sh"
    - "oracle_setup.11.sql"
    - "oracle_entrypoint.18c.sh"
    - "oracle_setup.18c.sh"
    - "oracle_env.18c.sh"
    - "oracle_setup.18c.sql"

- name: create selinux policy
  script: create_selinux_module.sh
  when: use_selinux

- name: "build images"
  containers.podman.podman_image:
    name: "oracle_{{ item['version'] }}"
    force: "{{ force_container_rebuild|bool }}"
    state: "present"
    path: "/usr/local/dockerbuilds/oracle"
    pull: yes
    build:
      # need isolation chroot (not sure about ulimit thing) so oracle
      # build can use su command
      extra_args: "-f Dockerfile.{{ item['version_prefix']}} --build-arg product_version='{{ item['version'] }}' --ulimit nofile=1048576:1048576 --isolation chroot"
      cache: "{{ not force_container_rebuild }}"

  with_items: "{{ oracle_versions }}"

- name: setup external network
  include_tasks: "{{ playbook_dir }}/roles/networking/tasks/add_ip.yml"
  vars:
    ip_number: "{{ item['public_ip'] }}"
    net_name: "{{ item['hostname'] }}"
  when: add_public_network|bool
  with_items: "{{ oracle_versions }}"

- name: delete existing oracle containers
  shell:
    cmd: podman rm -f "oracle_{{ item['version'] }}"
  with_items: "{{ oracle_versions }}"
  when: "delete_containers|bool"

- name: create oracle containers
  containers.podman.podman_container:
    image: "oracle_{{ item['version'] }}"
    name: "oracle_{{ item['version'] }}"
    restart_policy: always
    recreate: "{{ force_container_rebuild|bool }}"
    env: TZ="America/New_York"
    published_ports: "{{ (add_public_network|bool) | ternary(published_ports, omit) }}"
    network: dbcontainers
    cmd_args: ["--ip", "{{ item['internal_ip'] }}"]
  vars:
    published_ports:
        - "{{ item['public_ip'] }}:1521:1521/tcp"
        - "{{ item['public_ip'] }}:8085:8085/tcp"
  with_items: "{{ oracle_versions }}"

- name: add /etc/hosts entries
  lineinfile:
    path: /etc/hosts
    regexp: ".*{{ item['hostname'] }}"
    line: "{{ item['internal_ip'] }}    {{ item['hostname'] }}"
  with_items: "{{ oracle_versions }}"
