- name: create docker build location
  file:
    path: "/usr/local/dockerbuilds/mssql/"
    state: directory

- name: copy Dockerfile etc to docker build location
  copy:
    src: "{{ item }}"
    dest: "/usr/local/dockerbuilds/mssql/"
  with_items:
    - "mssql_setup.sh"
    - "mssql_setup.sql"
    - "mssql_entrypoint.sh"
    - "Dockerfile"

- name: "build images"
  containers.podman.podman_image:
    name: "mssql_{{ item['version'] }}"
    force: "{{ force_container_rebuild|bool }}"
    path: "/usr/local/dockerbuilds/mssql"
    pull: yes
    build:
      extra_args: "--build-arg product_version='{{ item['version'] }}'"
  with_items: "{{ mssql_versions }}"

- name: setup external network
  include_tasks: "{{ playbook_dir }}/roles/networking/tasks/add_ip.yml"
  vars:
    ip_number: "{{ item['public_ip'] }}"
    net_name: "{{ item['hostname'] }}"
  when: add_public_network|bool
  with_items: "{{ mssql_versions }}"

- name: delete existing mssql containers
  shell:
    cmd: podman rm -f "mssql_{{ item['version'] }}"
  with_items: "{{ mssql_versions }}"
  when: "delete_containers|bool"

- name: create mssql containers
  containers.podman.podman_container:
    image: "mssql_{{ item['version'] }}"
    name: "mssql_{{ item['version'] }}"
    restart_policy: always
    recreate: "{{ force_container_rebuild|bool }}"
    env: TZ="America/New_York"
    network: dbcontainers
    cmd_args: ["--ip", "{{ item['internal_ip'] }}"]
#    capabilities:
#      - SYS_PTRACE
    published_ports: "{{ (add_public_network|bool) | ternary(published_ports, omit) }}"
  vars:
    published_ports:
      - "{{ item['public_ip'] }}:1433:1433/tcp"
  with_items: "{{ mssql_versions }}"

- name: add /etc/hosts entries
  lineinfile:
    path: /etc/hosts
    regexp: ".*{{ item['hostname'] }}"
    line: "{{ item['internal_ip'] }}    {{ item['hostname'] }}"
  with_items: "{{ mssql_versions }}"

